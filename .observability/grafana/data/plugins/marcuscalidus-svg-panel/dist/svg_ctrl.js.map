{"version":3,"sources":["../src/svg_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","rendering","SVGDemos","Snap","ace","GrafanaJSCompleter","$lang_tools","$control","$panel","editor","session","pos","prefix","callback","getCursorPosition","line","getLine","row","substring","column","match","length","lastIndexOf","panelthis","evalObj","eval","evaluatePrefix","ctrl","svgnode","document","querySelector","wordList","map","word","caption","value","meta","key","push","Array","isArray","SVGCtrl","$scope","$injector","$rootScope","panelDefaults","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","aliasColors","format","svg_data","js_code","js_init_code","useSVGBuilder","svgBuilderData","width","height","viewport","x","y","elements","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","demos","initialized","editors","addEditorTab","prepareEditor","unitFormats","getUnitFormats","aceLangTools","acequire","addCompleter","nodeId","setTimeout","$","edit","attr","setValue","getSession","val","getValue","setInitFunction","setHandleMetricFunction","render","err","console","error","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","theme","mode","showPrintMargin","resetSVG","readOnly","subItem","data","series","color","alias","handleMetric","Function","doInit","isFunction","dataList","type","tableHandler","table","docsHandler","seriesHandler","seriesData","datapoints","target","flotpairs","getFlotPairs","tableData","columnNames","columns","text","rows","datapoint","forEach","columnIndex","aliasName","i","getSeriesIdByAlias","isNumber","decimals","scaledDecimals","delta","dec","Math","floor","log","LN10","magn","pow","norm","size","result","max","decimalInfo","getDecimalsForValue","formatFunc","valueFormats","formatter","scope","elem","attrs","idx","splice","buildSVG","steps","move","request","XMLHttpRequest","open","addEventListener","event","status","repositories","JSON","parse","responseText","warn","statusText","send","newCategories","selectedSVG","selectedRepository","items","item","includes","category","categories","svglist","filter","selectedCategory","svg","name","id","path","rotate","rcenterx","rcentery","scale","all","array","deferred","Deferred","fulfilled","results","resolve","promise","when","then","createElementNS","svgNS","namespaceURI","setAttribute","promises","element","dfd","get","svgFragment","g","appendChild","html","documentElement","children","outerHTML","templateUrl"],"mappings":"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","file":"svg_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport rendering from './rendering';\nimport {SVGDemos} from './demos';\nimport {Snap} from './node_modules/snapsvg/dist/snap.svg-min.js';\nimport ace from './node_modules/brace/index.js';\nimport './node_modules/brace/ext/language_tools.js';\nimport './node_modules/brace/theme/tomorrow_night_bright.js';\nimport './node_modules/brace/mode/javascript.js';\nimport './node_modules/brace/mode/svg.js';\n\n\nclass GrafanaJSCompleter {\n    constructor($lang_tools, $control, $panel) {\n        this.$lang_tools = $lang_tools;\n        this.$control = $control;\n        this.$panel = $panel;\n    }\n\n    getCompletions(editor, session, pos, prefix, callback) {\n        var pos = editor.getCursorPosition();\n        var line = editor.session.getLine(pos.row);\n\n        prefix = line.substring(0, pos.column).match(/this\\.\\S*/g);\n        if (prefix) {\n            prefix = prefix[prefix.length - 1];\n            prefix = prefix.substring(0, prefix.lastIndexOf('.'));\n\n            var panelthis = this.$panel;\n            var evalObj = eval('panel' + prefix);\n            this.evaluatePrefix(evalObj, callback);\n            return;\n        }\n\n        prefix = line.substring(0, pos.column).match(/ctrl\\.\\S*/g);\n        if (prefix) {\n            prefix = prefix[prefix.length - 1];\n            prefix = prefix.substring(0, prefix.lastIndexOf('.'));\n\n            var ctrl = this.$control;\n            var evalObj = eval(prefix);\n            this.evaluatePrefix(evalObj, callback);\n            return;\n        }\n\n        prefix = line.substring(0, pos.column).match(/svgnode\\.\\S*/g);\n        if (prefix) {\n            prefix = prefix[prefix.length - 1];\n            prefix = prefix.substring(0, prefix.lastIndexOf('.'));\n\n            var svgnode = document.querySelector('.svg-object');\n            var evalObj = eval(prefix);\n            this.evaluatePrefix(evalObj, callback);\n            return;\n        }\n\n        if (prefix == '') {\n            var wordList = ['ctrl', 'svgnode', 'this'];\n\n            callback(null, wordList.map(function (word) {\n                return {\n                    caption: word,\n                    value: word,\n                    meta: 'Grafana keyword'\n                };\n            }));\n        }\n    }\n\n    evaluatePrefix(evalObj, callback) {\n        var wordList = [];\n        for (var key in evalObj) {\n            wordList.push(key);\n        }\n        callback(null, wordList.map(function (word) {\n            return {\n                caption: word + ': ' + (Array.isArray(evalObj[word]) ? 'Array[' + (evalObj[word] || []).length + ']' : typeof evalObj[word]),\n                value: word,\n                meta: \"Grafana keyword\"\n            };\n        }));\n        return;\n    }\n}\n\n\nexport class SVGCtrl extends MetricsPanelCtrl {\n\n    constructor($scope, $injector, $rootScope) {\n        super($scope, $injector);\n        this.$rootScope = $rootScope;\n\n        var panelDefaults = {\n            links: [],\n            datasource: null,\n            maxDataPoints: 3,\n            interval: null,\n            targets: [{}],\n            cacheTimeout: null,\n            nullPointMode: 'connected',\n            aliasColors: {},\n            format: 'short',\n\n            svg_data: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 1000 1000\" ></svg>',\n            js_code: '',\n            js_init_code: '',\n            useSVGBuilder: false,\n            svgBuilderData: {\n                width: '100%',\n                height: '100%',\n                viewport: {\n                    x: 0,\n                    y: 0,\n                    width: 1000,\n                    height: 1000\n                },\n                elements: []\n            }\n        };\n\n        _.defaults(this.panel, panelDefaults);\n\n        this.events.on('render', this.onRender.bind(this));\n        this.events.on('refresh', this.onRender.bind(this));\n        this.events.on('data-received', this.onDataReceived.bind(this));\n        this.events.on('data-error', this.onDataError.bind(this));\n        this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n        this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n\n        this.demos = new SVGDemos(this);\n        this.initialized = 0;\n        this.editors = {};\n    }\n\n    onInitEditMode() {\n        this.addEditorTab('SVG Builder', 'public/plugins/marcuscalidus-svg-panel/editor_builder.html', 2);\n        this.addEditorTab('SVG', 'public/plugins/marcuscalidus-svg-panel/editor_svg.html', 3);\n        this.addEditorTab('Events', 'public/plugins/marcuscalidus-svg-panel/editor_events.html', 4);\n        this.prepareEditor();\n        this.unitFormats = kbn.getUnitFormats();\n        this.aceLangTools = ace.acequire(\"ace/ext/language_tools\");\n\n        this.aceLangTools.addCompleter(new GrafanaJSCompleter(this.aceLangTools, this, this.panel));\n    }\n\n    doShowAceJs(nodeId) {\n        setTimeout(function () {\n            if ($('#' + nodeId).length === 1) {\n                this.editors[nodeId] = ace.edit(nodeId);\n                $('#' + nodeId).attr('id', nodeId + '_initialized');\n                this.editors[nodeId].setValue(this.panel[nodeId], 1);\n                this.editors[nodeId].getSession().on('change', function () {\n                    var val = this.editors[nodeId].getSession().getValue();\n                    this.panel[nodeId] = val;\n                    try {\n                        this.setInitFunction();\n                        this.setHandleMetricFunction();\n                        this.render();\n                    } catch (err) {\n                        console.error(err);\n                    }\n                }.bind(this));\n                this.editors[nodeId].setOptions({\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    theme: 'ace/theme/tomorrow_night_bright',\n                    mode: 'ace/mode/javascript',\n                    showPrintMargin: false\n                });\n            }\n        }.bind(this), 100);\n        return true;\n    }\n\n    doShowAceSvg(nodeId) {\n        setTimeout(function () {\n            if ($('#' + nodeId).length === 1) {\n                this.editors[nodeId] = ace.edit(nodeId);\n                $('#' + nodeId).attr('id', nodeId + '_initialized');\n                this.editors[nodeId].setValue(this.panel[nodeId], 1);\n                this.editors[nodeId].getSession().on('change', function () {\n                    var val = this.editors[nodeId].getSession().getValue();\n                    this.panel[nodeId] = val;\n                    try {\n                        this.resetSVG();\n                        this.render();\n                    } catch (err) {\n                        console.error(err);\n                    }\n                }.bind(this));\n                this.editors[nodeId].setOptions({\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    readOnly: this.panel.useSVGBuilder,\n                    theme: 'ace/theme/tomorrow_night_bright',\n                    mode: 'ace/mode/svg',\n                    showPrintMargin: false\n                });\n            }\n        }.bind(this), 100);\n        return true;\n    }\n\n    setUnitFormat(subItem) {\n        this.panel.format = subItem.value;\n        this.render();\n    }\n\n    onDataError() {\n        this.data = [];\n        this.render();\n    }\n\n    changeSeriesColor(series, color) {\n        series.color = color;\n        this.panel.aliasColors[series.alias] = series.color;\n        this.render();\n    }\n\n    setHandleMetricFunction() {\n        this.panel.handleMetric = Function('ctrl', 'svgnode', this.panel.js_code);\n    }\n\n    setInitFunction() {\n        this.initialized = 0;\n        this.panel.doInit = Function('ctrl', 'svgnode', this.panel.js_init_code);\n    }\n\n    onRender() {\n        if (!_.isFunction(this.panel.handleMetric)) {\n            this.setHandleMetricFunction();\n        }\n\n        if (!_.isFunction(this.panel.doInit)) {\n            this.setInitFunction();\n        }\n    }\n\n    onDataReceived(dataList) {\n        this.data = [];\n\n        if (dataList.length > 0 && dataList[0].type === 'table') {\n            this.data = dataList.map(this.tableHandler.bind(this));\n            this.table = this.data; // table should be regarded as deprecated\n        } else if (dataList.length > 0 && dataList[0].type === 'docs') {\n            this.data = dataList.map(this.docsHandler.bind(this));\n        } else {\n            this.data = dataList.map(this.seriesHandler.bind(this));\n            this.series = this.data; // series should be regarded as deprectated\n        }\n\n        this.render();\n    }\n\n    resetSVG() {\n        this.initialized = 0;\n    }\n\n    seriesHandler(seriesData) {\n        const series = new TimeSeries({\n            datapoints: seriesData.datapoints,\n            alias: seriesData.target\n        });\n\n        series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n        return series;\n    }\n\n\n    docsHandler(seriesData) {\n        return seriesData;\n    }\n\n    tableHandler(tableData) {\n\n        const columnNames = tableData.columns.map(column => column.text);\n\n        const rows = tableData.rows.map(row => {\n            const datapoint = {};\n\n            row.forEach((value, columnIndex) => {\n                const key = columnNames[columnIndex];\n                datapoint[key] = value;\n            });\n\n            return datapoint;\n        });\n\n        return {columnNames: columnNames, rows: rows};\n    }\n\n    getSeriesIdByAlias(aliasName) {\n        for (var i = 0; i < this.data.length; i++) {\n            if (this.data[i].alias == aliasName) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getSeriesElementByAlias(aliasName) {\n        var i = this.getSeriesIdByAlias(aliasName);\n        if (i >= 0) {\n            return this.data[i];\n        }\n        return null;\n    }\n\n    getDecimalsForValue(value) {\n        if (_.isNumber(this.panel.decimals)) {\n            return {decimals: this.panel.decimals, scaledDecimals: null};\n        }\n\n        var delta = value / 2;\n        var dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n        var magn = Math.pow(10, -dec);\n        var norm = delta / magn; // norm is between 1.0 and 10.0\n        var size;\n\n        if (norm < 1.5) {\n            size = 1;\n        } else if (norm < 3) {\n            size = 2;\n            // special case for 2.5, requires an extra decimal\n            if (norm > 2.25) {\n                size = 2.5;\n                ++dec;\n            }\n        } else if (norm < 7.5) {\n            size = 5;\n        } else {\n            size = 10;\n        }\n\n        size *= magn;\n\n        // reduce starting decimals if not needed\n        if (Math.floor(value) === value) {\n            dec = 0;\n        }\n\n        var result = {};\n        result.decimals = Math.max(0, dec);\n        result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n\n        return result;\n    }\n\n    formatValue(value) {\n        var decimalInfo = this.getDecimalsForValue(value);\n        var formatFunc = kbn.valueFormats[this.panel.format];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    formatValueWithFormatter(value, formatter) {\n        var decimalInfo = this.getDecimalsForValue(value);\n        var formatFunc = kbn.valueFormats[formatter];\n        if (formatFunc) {\n            return formatFunc(value, decimalInfo.decimals, decimalInfo.scaledDecimals);\n        }\n        return value;\n    }\n\n    link(scope, elem, attrs, ctrl) {\n        rendering(scope, elem, attrs, ctrl);\n    }\n\n    removeElement(idx) {\n        this.panel.svgBuilderData.elements.splice(idx, 1);\n        this.buildSVG();\n    }\n\n    moveElement(idx, steps) {\n        this.panel.svgBuilderData.elements = _.move(this.panel.svgBuilderData.elements, idx, idx + steps);\n        this.buildSVG();\n    }\n\n    prepareEditor() {\n        var request = new XMLHttpRequest();\n\n        request.open(\"GET\", \"public/plugins/marcuscalidus-svg-panel/assets/repositories.json\");\n        request.addEventListener('load', (event) => {\n            if (request.status >= 200 && request.status < 300) {\n                this.panel.repositories = JSON.parse(request.responseText);\n            } else {\n                console.warn(request.statusText, request.responseText);\n            }\n        });\n        request.send();\n    }\n\n    repositorySelected() {\n        let newCategories = [];\n        this.panel.selectedSVG = null;\n\n        if (this.panel.repositories[this.panel.selectedRepository]) {\n            _.forEach(this.panel.repositories[this.panel.selectedRepository].items,\n                (item) => {\n                    if (!_.includes(newCategories, item.category)) {\n                        newCategories.push(item.category);\n                    }\n                })\n        }\n\n        this.panel.categories = newCategories;\n    }\n\n    categorySelected() {\n        this.panel.svglist = [];\n        this.panel.selectedSVG = null;\n\n        if (this.panel.repositories[this.panel.selectedRepository]) {\n            this.panel.svglist = _.filter(this.panel.repositories[this.panel.selectedRepository].items,\n                (item) => item.category === this.panel.selectedCategory);\n        }\n    }\n\n    addSVGItem() {\n        let svg = JSON.parse(this.panel.selectedSVG);\n\n        this.panel.svgBuilderData.elements.push({\n            name: svg.name,\n            id: svg.name,\n            path: svg.path,\n            x: 0,\n            y: 0,\n            rotate: 0,\n            rcenterx: 0,\n            rcentery: 0,\n            scale: 1\n        })\n        this.buildSVG();\n    }\n\n    buildSVG() {\n        var all = function (array) {\n            var deferred = $.Deferred();\n            var fulfilled = 0,\n                length = array.length;\n            var results = [];\n\n            if (length === 0) {\n                deferred.resolve(results);\n            } else {\n                array.forEach(function (promise, i) {\n                    $.when(promise()).then(function (value) {\n                        results[i] = value;\n                        fulfilled++;\n                        if (fulfilled === length) {\n                            deferred.resolve(results);\n                        }\n                    });\n                });\n            }\n\n            return deferred.promise();\n        };\n\n        let panel = this.panel;\n        if (panel.useSVGBuilder) {\n            let svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            let svgNS = svg.namespaceURI;\n\n            svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n            svg.setAttribute('width', panel.svgBuilderData.width);\n            svg.setAttribute('height', panel.svgBuilderData.height);\n            svg.setAttribute('viewBox', panel.svgBuilderData.viewport.x + ' ' +\n                panel.svgBuilderData.viewport.y + ' ' +\n                panel.svgBuilderData.viewport.width + ' ' +\n                panel.svgBuilderData.viewport.height);\n\n            let promises = [];\n\n            panel.svgBuilderData.elements.forEach((element) => {\n                promises.push(() => {\n                    return $.Deferred((dfd) => {\n                        $.get('public/plugins/marcuscalidus-svg-panel/assets/' + element.path, (data) => {\n                            dfd.resolve(data);\n                        });\n                    }).promise();\n                });\n            });\n\n            $.when(all(promises)).then(results => {\n                results.forEach(\n                    (svgFragment, i) => {\n                        let g = document.createElementNS(svgNS, 'g');\n                        g.setAttribute('id', panel.svgBuilderData.elements[i].id)\n                        g.setAttribute('transform', 'translate(' + panel.svgBuilderData.elements[i].x + ' ' + panel.svgBuilderData.elements[i].y + ') ' +\n                            'rotate(' + panel.svgBuilderData.elements[i].rotate + ' ' + panel.svgBuilderData.elements[i].rcenterx + ' ' + panel.svgBuilderData.elements[i].rcentery + ') ' +\n                            'scale(' + panel.svgBuilderData.elements[i].scale + ')');\n                        svg.appendChild(g);\n                        $(g).html(svgFragment.documentElement.children);\n                    }\n                )\n                panel.svg_data = svg.outerHTML;\n                this.resetSVG();\n                this.render();\n            });\n        }\n    }\n\n}\n\nSVGCtrl.templateUrl = 'module.html';"]}